/*
function
*/


// Mixin itself
.clearfix {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// Mixin itself
.clearfix {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

.turnover-color-block-func (@block-border-color, @border-width, @nth: 1) when ( iscolor(@block-border-color)) {
    &:nth-of-type(@{nth}) {
        border-left: @border-width @block-border-color solid;
        &:after {
            background-color: @block-border-color;
        }
    }
}

.hover-trans(@type, @color) when (@type =color) and (iscolor(@color)) {
    transition: all .15s ease-in-out;
    &:hover {
        color: @color;
        //transition: all .15s ease-in-out;
    }
}

.hover-trans(@type, @color) when (@type =bgc) and (iscolor(@color)) {
    transition: all .3s ease-in-out;
    &:hover {
        background-color: @color;
        //transition: all .15s ease-in-out;
    }
}

.focus-trans(@type, @width) when (@type =width) and (isnumber(@width)) {
    transition: all .5s ease-in-out;
    &:focus {
        width: @width;
        //transition: all .15s ease-in-out;
    }
}




/*
function
*/

.turnover-color-block-func (@block-border-color, @border-width, @nth: 1) when ( iscolor(@block-border-color)) {
    &:nth-of-type(@{nth}) {
        border-left: @border-width @block-border-color solid;
        &:after {
            background-color: @block-border-color;
        }
    }
}

.hover-trans(@type, @color) when (@type =color) and (iscolor(@color)) {
    transition: all .15s ease-in-out;
    &:hover {
        color: @color;
        //transition: all .15s ease-in-out;
    }
}

.hover-trans(@type, @color) when (@type =bgc) and (iscolor(@color)) {
    transition: all .3s ease-in-out;
    &:hover {
        background-color: @color;
        //transition: all .15s ease-in-out;
    }
}

.focus-trans(@type, @width) when (@type =width) and (isnumber(@width)) {
    transition: all .5s ease-in-out;
    &:focus {
        width: @width;
        //transition: all .15s ease-in-out;
    }
}

//长进度条 百分比
.ranglist-line(@percent, @color, @nth) when (iscolor(@color)) {
    tbody tr:nth-of-type(@{nth}) td:nth-of-type(2) {
        span.line {
            position: relative;
            margin-left: 15px;
            display: inline-block;
            vertical-align: middle;
            width: 170px;
            background-color: #dcdcdc;
            height: 4px;
            &:before {
                content: "";
                position: absolute;
                top: 0px;
                left: 0px;
                display: block;
                width: 170px*@percent;
                background-color: @color;
                height: 4px;
            }
        }
    }
}

//p 元素高度占位 用于移动设备
.make-line-and-height-p(@number) {
    height: unit(@number/@base-px-2-rem, rem);
    line-height: unit(@number/@base-px-2-rem, rem);
}

//p 元素高度占位 用于移动设备
.make-big-img-p(@big-banner-text-height) {
    >p {
        width: 100%;
        // height: unit(100/@base-px-2-rem, rem);
        // line-height: unit(100/@base-px-2-rem, rem);
        .make-line-and-height-p(@big-banner-text-height);
        text-align: center;
        font-size: 15px;
        background-color: #fff;
        letter-spacing: 1px;
        color: #000;
        font-weight: 500;
        @media screen and (min-width: 768px) {
            font-size: 20px;
            letter-spacing: 2px;
        }
    }
}

//产品专场下的 2X2 商品展示容器 及 布局
.make-2X2-product-box() {
    //
    .product-box-wrapper {
        width: 100%;
        padding: unit(20/@base-px-2-rem, rem);
        >.product-box {
            display: inline-block;
            width: 49%;
            >a {
                //display: block;
                //width: 49.5%;
                text-align: center;
                >img {
                    //http://stackoverflow.com/questions/7055393/center-image-using-text-align-center
                    //fix the img in the block containers
                    //img is an inline ele
                    height: unit(360/@base-px-2-rem, rem);
                    display: block;
                    margin: 0 auto;
                }
                >p {
                    text-overflow: ellipsis;
                    line-height: 1.4em;
                    height: 2.8em;
                    overflow: hidden;
                    @media screen and (min-width: 768px) {
                        font-size: 20px;
                        letter-spacing: 2px;
                    }
                    &+p {
                        color: red;
                        font-weight: 600;
                    }
                }
            }
        }
    }
}

.mod-retina-display(@fs, @ls) {
    p {
        @media screen and (min-width: 768px) {
            font-size: @fs;
            letter-spacing: @ls;
        }
    }
    @media screen and (min-width: 768px) {
        font-size: @fs;
        letter-spacing: @ls;
    }
}



.make-text(@fs, @ls) {}


/*
通用单行文字标题栏
*/

.base-title(@line-arg) when (@line-arg =none) {
    > p {
        width: 100%;
        text-align: center;
        .make-line-and-height-p(@big-banner-text-height);
        font-size: 15px;
        background-color: #fff;
        letter-spacing: 1px;
        color: #000;
        font-weight: 500;
        .mod-retina-display(20px, 2px);
    }
}


/*
容器下的第一个p 两边有线
*/

.base-title(@line-arg) when (@line-arg =line) {
    > p {
        position: relative;
        width: 100%;
        text-align: center;
        .make-line-and-height-p(@big-banner-text-height);
        font-size: 15px;
        background-color: #fff;
        letter-spacing: 1px;
        color: #000;
        font-weight: 500;
        .mod-retina-display(20px, 2px);
        &:after {
            content: "";
            display: block;
            position: absolute;
            top: 50%;
            left: 5%;
            height: 1px;
            width: 22.3%;
            background-color: #aaa;
        }
        &:before {
            content: "";
            display: block;
            position: absolute;
            top: 50%;
            right: 5%;
            height: 1px;
            width: 22.3%;
            background-color: #aaa;
        }
    }
}


/*

创建fixed元素
*/



.make-fixed-bar(@height) {
    position: fixed;
    z-index: @z-index-nav-search-bar;
    width: 100%;
    max-width: @max-width;
    height: unit(@height/@base-px-2-rem, rem);
    background-color: #fff;
}


/*布局用容器*/

//左右内边距
.base-pd-lr-wrapper() {
    background-color: #fff;
    padding: 0 unit(@base-pd-lr/@base-px-2-rem, rem);
}
//上下内边距
.base-pd-tb-wrapper() {
    background-color: #fff;
    padding: unit(@base-pd-tb/@base-px-2-rem, rem) 0;
}
//全内边距
.base-pd-wrapper() {
    background-color: #fff;
    padding: unit(@base-pd-tb/@base-px-2-rem, rem);
}

//文字超出隐藏省略
.text-omit() {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}